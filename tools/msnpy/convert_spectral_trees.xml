<tool id="msnpy-convert-spectral-trees" name="msnpy convert-spectral-trees" version="1.0">
  <description>Convert spectral trees to MSP files or dimspy PeakList objects</description>
  <macros>
        <import>macros.xml</import>
  </macros>
  <expand macro="requirements" />
  <stdio>
    <exit_code level="fatal" range="1:"/>
  </stdio>
  <version_command>python msnpy convert-spectral-trees --version</version_command>
  <command><![CDATA[
      msnpy convert-spectral-trees
                                   #if $input_type_cond.input_type=='json':
                                      --input $input_json
                                      --input_type json
                                   #else:
                                      --input $input_hdf5
                                      --input_type dimspy-hdf5
                                   #end if


                                   --output .
                                   --name spec_trees

                                   #if $merge_cond.merge:
                                      $merge_cond.merge
                                      --ppm $merge_cond.ppm
                                   #end if

                                   #if $msp_cond.msp:
                                      $msp_cond.msp
                                      --msp_type $msp_cond.msp_type
                                   #end if

                                   --polarity $polarity
                                   $adjust_mz

                                   $ms1

]]></command>
  <inputs>

    <conditional name="input_type_cond">
      <param name="input_type" type="select" label="Input type"  argument="--input_type">
        <option value="json">MSnPy JSON spectral trees</option>
        <option value="hdf5" >DIMSpy HDF5 peaklists</option>
      </param>
      <when value="json">
        <param name="input_json" type="data" format="json" label="MSnPy Spectral Trees" help="Json that includes molecular formula annotations for the spectra"
           argument="--input">
          <validator type="empty_field" />
        </param>
      </when>
      <when value="hdf5">
        <param name="input_hdf5" type="data" format="hdf5" label="DIMSpy peaklists" help="HDF5 with list of DIMSpy PeakList objects"
           argument="--input">
          <validator type="empty_field" />
        </param>
      </when>
    </conditional>

    <conditional name="merge_cond">
      <param argument="--merge" checked="true" label="" name="merge" type="boolean" truevalue="--merge" falsevalue=""/>
        <when value="--merge">
          <param argument="--ppm" label="Mass tolerance in parts per million." name="ppm" optional="true" type="float" value="5.0"/>
        </when>
        <when value="false">
        </when>
    </conditional>

    <conditional name="msp_cond">
      <param argument="--msp" checked="true" label="" name="msp" type="boolean" truevalue="--msp" falsevalue=""/>
        <when value="--msp">
          <param name="msp_type" type="select" label="MSP file type?"  argument="--msp_type">
            <option value="generic_msp">Generic MSP format</option>
            <option value="massbank" selected="true">European MassBank format</option>
          </param>
        </when>
        <when value="false">
        </when>
    </conditional>

    <param argument="--adjust_mz" checked="true" label="" name="adjust_mz" type="boolean" truevalue="--adjust_mz" falsevalue=""/>
    <param argument="--ms1" checked="true" label="" name="ms1" type="boolean" truevalue="--ms1" falsevalue=""/>

    <param name="polarity" type="select" label="Polarity"  argument="--polarity">
      <option value="positive">Positive</option>
      <option value="negative" >Negative</option>
      <option value="NA" selected="true">Not applicable</option>
    </param>


  </inputs>
  <outputs>
        <data format="hdf5" hidden="false" name="merged_hdf5"
              from_work_dir="spec_trees_merged_pls.hdf5"
              label="${tool.name} on ${on_string}: hdf5 dimspy-peaklist (merged)">
               <filter>merge_cond['merge']</filter>
        </data>
        <data format="hdf5" hidden="false" name="non_merged_hdf5"
              from_work_dir="spec_trees_non_merged_pls.hdf5"
              label="${tool.name} on ${on_string}: hdf5 dimspy-peaklist (non-merged)"/>

        <data format="hdf5" hidden="false" name="precursors_hdf5"
              from_work_dir="spec_trees_ms1_precursors_pls.hdf5"
              label="${tool.name} on ${on_string}: hdf5 dimspy-peaklist (ms1 precursors)" >
              <filter>ms1</filter>
        </data>

        <data format="msp" hidden="false" name="merged_msp" from_work_dir="spec_trees_merged.msp"
              label="${tool.name} on ${on_string}: MSP (merged)">
               <filter>msp_cond['msp'] and merge_cond['merge']</filter>
        </data>
        <data format="msp" hidden="false" name="non_merged_msp" from_work_dir="spec_trees_non_merged.msp"
              label="${tool.name} on ${on_string}: MSP (non-merged)">
              <filter>msp_cond['msp']</filter>
        </data>
        <data format="msp" hidden="false" name="precursors_msp" from_work_dir="spec_trees_ms1_precursors.msp"
              label="${tool.name} on ${on_string}: MSP (ms1 precursors)" >
              <filter>msp_cond['msp'] and ms1</filter>
        </data>
  </outputs>
  <tests>
    <test>
      <param name="input_json" value="A06_annotated_trees_subset.json" ftype="json"/>

      <output name="merged_hdf5" value="A06_spec_trees_non_merged_pls.hdf5"/>
      <output name="non_merged_hdf5" value="A06_spec_trees_merged_pls.hdf5"/>
      <output name="precursors_hdf5" value="A06_spec_trees_ms1_precursors_pls.hdf5"/>
      <output name="merged_msp" value="A06_spec_trees_non_merged_pls.msp"/>
      <output name="non_merged_msp" value="A06_spec_trees_merged_pls.msp"/>
      <output name="precursors_msp" value="A06_spec_trees_ms1_precursors_pls.msp"/>

    </test>
  </tests>

  <help>
Convert tree to MSP or DIMSpy PeakList
==========================================================================

Description
----------------




  </help>
</tool>